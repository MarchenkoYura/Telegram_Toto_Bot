"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback'–æ–≤ –¥–ª—è Telegram –±–æ—Ç–∞
"""

from typing import Dict, Callable, Awaitable
from telegram import Update
from telegram.ext import ContextTypes


class CallbackHandler:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback'–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª–æ–≤–∞—Ä—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    def __init__(self, bot_instance):
        self.bot = bot_instance
        
        # –°–ª–æ–≤–∞—Ä—å —Ç–æ—á–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö callback'–æ–≤)
        self.exact_handlers: Dict[str, Callable] = {
            "event_with_photo": self.bot.start_event_with_photo,
            "event_without_photo": self.bot.start_event_without_photo,
            "cancel_event_creation": self.bot.cancel_event_creation,
            "cancel_proposal_creation": self.bot.cancel_proposal_creation,
            "proposal_with_photo": self.bot.start_proposal_with_photo,
            "proposal_without_photo": self.bot.start_proposal_without_photo,
            "skip_description": self.bot.skip_proposal_description,
            "back_to_events": self.bot.show_events_inline,
            "back_to_proposals": self.bot.show_proposals_inline,
            "back_to_admin": self.bot.back_to_admin_menu,
        }
        
        # –°–ª–æ–≤–∞—Ä—å –ø—Ä–µ—Ñ–∏–∫—Å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (–¥–ª—è callback'–æ–≤ –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞)
        self.prefix_handlers: Dict[str, Callable] = {
            "odds_": self._handle_odds_selection,
            "custom_odds_": self._handle_custom_odds,
            "proposal_": self._handle_proposal_action,
            "event_": self._handle_event_details,
            "bet_": self._handle_make_bet,
        }
    
    async def handle_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback'–æ–≤"""
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
        if callback_data in self.exact_handlers:
            await self.exact_handlers[callback_data](update, context)
            return
        
        # –ó–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å—ã
        for prefix, handler in self.prefix_handlers.items():
            if callback_data.startswith(prefix):
                await handler(update, context, callback_data)
                return
        
        # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –ª–æ–≥–∏—Ä—É–µ–º
        print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback: {callback_data}")
    
    async def _handle_odds_selection(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"""
        await self.bot.handle_odds_selection(update, context, callback_data)
    
    async def _handle_custom_odds(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"""
        proposal_id = int(callback_data.split("_")[2])
        await self.bot.start_custom_odds_input(update, context, proposal_id)
    
    async def _handle_proposal_action(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏"""
        await self.bot.handle_proposal_action(update, context, callback_data)
    
    async def _handle_event_details(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞ –¥–µ—Ç–∞–ª–µ–π —Å–æ–±—ã—Ç–∏—è"""
        await self.bot.show_event_details(update, context, callback_data)
    
    async def _handle_make_bet(self, update: Update, context: ContextTypes.DEFAULT_TYPE, callback_data: str):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç–∞–≤–∫–∏"""
        await self.bot.make_bet(update, context, callback_data)


class TextHandler:
    """–ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª–æ–≤–∞—Ä—è"""
    
    def __init__(self, bot_instance):
        self.bot = bot_instance
        
        # –°–ª–æ–≤–∞—Ä—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ (–∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é)
        self.menu_handlers: Dict[str, Callable] = {
            "üé≤ –°–æ–±—ã—Ç–∏—è": self.bot.show_events,
            "üí∞ –ë–∞–ª–∞–Ω—Å": self.bot.balance,
            "üéØ –ú–æ–∏ —Å—Ç–∞–≤–∫–∏": self.bot.my_bets,
            "üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ": self.bot.start_proposal_creation,
            "‚ÑπÔ∏è –ü–æ–º–æ—â—å": self.bot.help_command,
            "üëë –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å": self.bot.admin_menu_handler,
            "üÜï –°–æ–∑–¥–∞—Ç—å —Å–æ–±—ã—Ç–∏–µ": self.bot.start_event_creation,
            "üîí –ó–∞–∫—Ä—ã—Ç—å —Å–æ–±—ã—Ç–∏–µ": self.bot.close_event_menu,
            "üìã –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è": self.bot.show_proposals_menu,
            "üíµ –î–æ–±–∞–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å": self.bot.add_balance_menu,
            "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞": self.bot.show_stats,
            "‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é": self.bot.back_to_main_menu,
        }
    
    async def handle_text(self, update: Update, context: ContextTypes.DEFAULT_TYPE, text: str):
        """–û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if context.user_data.get('betting_step') == 'waiting_amount':
            await self.bot.process_bet_amount(update, context, text)
            return
        
        if context.user_data.get('custom_odds_step'):
            await self.bot.process_custom_odds_input(update, context, text)
            return
        
        if context.user_data.get('creating_event') and update.effective_user.id == self.bot.config.ADMIN_ID:
            await self.bot.process_event_creation_step(update, context, text)
            return
        
        if context.user_data.get('creating_proposal'):
            await self.bot.process_proposal_creation_step(update, context, text)
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é
        if text in self.menu_handlers:
            await self.menu_handlers[text](update, context)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
            await update.message.reply_text(
                "ü§î –Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏."
            )
